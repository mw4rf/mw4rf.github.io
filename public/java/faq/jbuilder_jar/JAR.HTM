<html>

<head>

<title>Comment exporter un programme avec JBuilder 5 ?</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

</head>



<body bgcolor="#FFFFFF">

<div align="center">

  <p><font color="#FF0000" size="5">Comment exporter un programme avec JBuilder 

    5 ?</font> </p>

  <p align="left">Ce chapitre de la FAQ a pour but de montrer comment exporter, 

    sous la forme d'une archive JAR, un programme Java (application, applet, servlet, 

    web app, bean, etc...). Nous utiliserons ici la situation la plus simple: 

    une application (avec m&eacute;thode main()) export&eacute;e dans une archive 

    JAR auto-ex&eacute;cutable. Nous d&eacute;taillerons les &eacute;tapes de 

    la cr&eacute;ation d'une telle archive.<br>

    NOTE 1: Pour des raisons de temps notamment (JBuilder 5 n'est pas encore sortie 

    en France &agrave; l'heure de la r&eacute;daction de cet article), la version 

    de JBuilder uyilis&eacute;e sera la version US.<br>

    NOTE 2: cette page contient de nombreuses images, le temps de chargement peut 

    &ecirc;tre assez long...</p>

  <p align="left">&nbsp;</p>

  <p align="left">1) Lancer l'outil, ou wizard, d'exportataion: Menu WIZARDS -&gt; 

    ARCHIVE BUILDER</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR1.gif" width="1024" height="714"></p>

  <p align="left">&nbsp;</p>

  <p align="left">&nbsp;</p>

  <p align="left">2) Premi&egrave;re &eacute;tape de l'exportation: le choix d'un 

    format.</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR2.gif" width="559" height="425"> 
  </p>

  <p align="left">Nous choisissons ici le format &quot;Application&quot;. On peut 

    cependant prendre &quot;Basic&quot; (comme &quot;Application&quot; mais non 

    auto-ex&eacute;cutable), Applet pour exporter des applets, Web Start pour 

    exporter des Wab App, etc... Une descritpion de chaque option est faite dans 

    la case de la fanetre &quot;Description&quot;.</p>

  <p align="left">3) R&eacute;solution des d&eacute;pendances (1)</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR3.gif" width="587" height="426"></p>

  <p align="left">Un programme Java a la plupart du temps des d&eacute;pendances, 

    c'est &agrave; dire des classes ou des packages absolument n&eacute;cessaires 

    pour s'ex&eacute;cuter. Par exemple, un programme utilisant une interface 

    graphique Swing devra absolument int&eacute;grer les classes du package Swing 

    n&eacute;cessaires.<br>

    Pas besoin de sp&eacute;cifier ici les classes du package Swing ou de tout 

    autre package &quot;classique&quot; fourni avec le JDK. Par contre, si vous 

    utilisez des biblioth&egrave;ques non fournies par d&eacute;faut (par exemple 

    le VerticalFlowLayout de Borland). <br>

    C'est &eacute;galement ici que l'on ajoutera &agrave; l'archive tous les fichiers 

    non-java n&eacute;cessaires. </p>

  <p align="left">4) R&eacute;solution des d&eacute;pendances (2)</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR4.gif" width="585" height="427"></p>

  <p align="left">Vous ne ferez rien ici si aucun package autre que les packages 

    par d&eacute;faut de Sun n'est n&eacute;cessaire &agrave; votre programme. 

    Sinon vous devrez d&eacute;cider du niveau d'inclusion. Je conseille d'inclure 

    toutes les classes et toutes les ressources, on perd un peu en taille du fichier, 

    mais on est s&ucirc;r que tout fonctionnera !</p>

  <p align="left">5) Cr&eacute;er un fichier MANIFEST</p>

  <p align="left">Cette &eacute;tape n'est pas n&eacute;cessaire dans tous les 

    cas, par exemple si vous avez choisi &quot;Basic&quot; &agrave; l'&eacute;cran 

    (1), le fichier manifest ne sera par d&eacute;faut pas cr&eacute;&eacute;. 

    Par contre pour &quot;Application&quot; il est n&eacute;cessaire: le fichier 

    Manifest indique, entre autres, &agrave; l'interpr&eacute;teur Java quelle 

    classe contient la m&eacute;thode main(), condition n&eacute;cessaire &agrave; 

    l'auto-ex&eacute;cution de l'archive.</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR5.gif" width="586" height="436"></p>

  <p align="left">Vous pouvez choisir d'inclure un Manifest que vous avez cr&eacute;&eacute; 

    vous m&ecirc;me, amis pourquoi se compliquer la vie quand JBuilder le g&eacute;n&egrave;re 

    tout seul comme un grand ?!</p>

  <p align="left">6) Sp&eacute;cifier la classe main()</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR6.gif" width="585" height="435"></p>

  <p align="left">Un package, une archive, peuvent contenir plusieurs classes 

    impl&eacute;mentant une m&eacute;thode main(). On d&eacute;finit ici laquelle 

    des ces m&eacute;thodes main() devra &ecirc;tre signal&eacute;e au Manifest. 

    On laissera coch&eacute;e la case &quot;Use the main class specified in the 

    default runtime&quot; par d&eacute;faut. Lors de la premi&egrave;re ex&eacute;cution 

    d'un programme (&agrave; moins que l'ossature de ce programme n'ait &eacute;t&eacute; 

    cr&eacute;&eacute;e par JBuilder lui-m&ecirc;me), JBuilder vous demande quelle 

    est la classe principale du programme, et c'est cette classe, contenant la 

    m&eacute;thode main() dans le cas d'une application, qui sera utilis&eacute;e 

    pour lancer le programme sous JBuilder (en runtime normal ou en debug), et 

    qui sera ici consid&eacute;r&eacute;e comme la classe principale du programme 

    &agrave; signaler comme telle au Manifest.</p>

  <p align="left">7) Observer</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR7.gif" width="359" height="402"></p>

  <p align="left">On voit une nouvelle ic&ocirc;ne dans l'inspecteur d'objets. 

    Notre archive s'appelle &quot;Application&quot;, mais ne contient pas encore 

    de fichier Jar. Pour cr&eacute;er r&eacute;&egrave;lement le fichier Jar nous 

    devons &quot;reconstruire&quot; le programme.</p>

  <p align="left">8) Reconstruire</p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR8.gif" width="414" height="418"></p>

  <p align="left">Pour &quot;reconstruire&quot; on peut soir faire un clic-droit 

    sur l'ic&ocirc;ne &quot;Application&quot; et choisur &quot;Reconstruire&quot; 

    (ou &quot;Rebuild&quot; en version US) afin de cr&eacute;er le fichier JAR. 

    On peut aussi utiliser le bouton de la barre d'ic&ocirc;nes.</p>

  <p align="left">Ceci est tr&egrave;s pratique: &agrave; chaque compilation, 

    JBuilder recr&eacute;e automatiquement le fichier JAR. Un exemple de compilation 

    ci-dessous o&ugrave; l'on voit que JBuilder est en train de cr&eacute;er l'archive. 

    (j'ai d&ucirc; m'y reprendre &agrave; plusieurs fois pour faire la capture 

    d'&eacute;cran tellement que la cr&eacute;ation de cette archive, pour notre 

    petit programme exemple, est rapide !) </p>

  <p align="left"><img src="http://www.java-france.com/faq/JAR9.gif" width="712" height="376"></p>

  <p align="left">&nbsp;</p>

  <hr align="Left" width="100%" size="2">

  <br>

  <div align="Left">Tutoriel distribu&eacute; pour le FAQ Java de Java-France 

    <a href="http://www.java-france.com" target="_new">www.java-france.com</a> 

    <a href="http://www.jgflsoft.com"> / www.jgflsoft.com</a><br>

    Pour toute information sur cet article, &eacute;crire &agrave;<a href="mailto:narcanes@online.fr"> 

    narcanes@online.fr</a><br>

  </div>

  <div align="Left"><font><font><font>Ecrit &agrave; Montpellier le 3 juillet 

    2001 </font></font></font></div>

  <p align="left">&nbsp;</p>

  <p align="left">&nbsp;</p>

  <p align="left">&nbsp;</p>

</div>

</body>

</html>

